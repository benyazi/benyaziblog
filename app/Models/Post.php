<?php

namespace App\Models;

use App\User;
use Illuminate\Database\Eloquent\Model;
use League\CommonMark\CommonMarkConverter;

class Post extends Model
{
    protected $table = "post_items";
    protected $dates = ["published_at"];
    protected $fillable = [
        'title'
    ];

    public function author()
    {
        return $this->belongsTo(User::class,'user_id');
    }

    public function tags()
    {
        return $this->belongsToMany('App\Models\Tag','post_tag','post_id','tag_id');
    }

    public function scopePublished($query) {
        return $query->where('status','published');
    }

    public function toArray()
    {
        $array = parent::toArray(); // TODO: Change the autogenerated stub
        if($this->author !== null) {
            $array['author'] = $this->author->toArray();
        } else {
            $array['author'] = [
                'id' => null,
                'name' => 'nobody'
            ];
        }
        $array['tags'] = $this->tags()->get();
        $array['intro_html'] = (new CommonMarkConverter())->convertToHtml($this->intro);
        $array['content_html'] = (new CommonMarkConverter())->convertToHtml($this->content);
        $array['published_at_formatted'] = $this->published_at->format('m/d/y H:i');
        $array['url'] = route('post.item', ['slug' => $this->slug]);
        return $array;
    }

}